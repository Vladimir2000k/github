version: '3.7'

services:
  nginx:
    image: nginx:latest
    container_name: dsr-nginx-stag
    ports:
      - "80:80"
    volumes:
      - ./nginx/back/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/back/dsr.stag.conf/:/etc/nginx/conf.d/default.conf
      - ./backend-static:/backend-static
      - ./media:/media
      - ./keys:/etc/letsencrypt:ro
    depends_on:
      - back
      - front

  front:
    container_name: dsr-front-stag
    image: ghcr.io/thewhiteunicorn/disraeli-frontend:staging
    volumes:
      - ./nginx/front/dsr-front.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - back

  back:
    container_name: dsr-back-prod
    restart: always
    image: ghcr.io/thewhiteunicorn/disraeli-backend:staging
    command: sh -c "
      pipenv run python manage.py collectstatic --noinput
      && pipenv run python manage.py migrate api_app
      && pipenv run python manage.py migrate
      && pipenv run gunicorn aidisraeli_proj.asgi:application -b 0.0.0.0:8000 -w 4 -k uvicorn.workers.UvicornWorker"
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST_DOCKER}
      - POSTGRES_PORT=${POSTGRES_PORT_DOCKER}
    volumes:
      - ./backend-static:/code/static
      - ./media:/code/media
    depends_on:
      - db

  db:
    image: postgres:11.4-alpine
    container_name: dsr-db-stag
    volumes:
      - postgres_data_dsr:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB_NAME}

volumes:
    postgres_data_dsr:
